istio-cni:
  cni:
    cniBinDir: /var/snap/microk8s/current/opt/cni/bin/
    cniConfDir: /var/snap/microk8s/current/args/cni-network/
    excludeNamespaces:
     - istio-system
     - kube-system
istio-discovery:
  sidecarInjectorWebhook:
    useLegacySelectors: false
    enableNamespacesByDefault: true
  meshConfig:
    extensionProviders:
      # the unique name for the authorizer, referred to by AuthorizationPolicy.
    - name: "oauth-ext-authz"
      # Specifies the concrete type of the external authorizer as Envoy ext_authz filter using
      # HTTP API. Note the HTTP API means the protocol used to talk to the external server, not
      # the user traffic. The other supported API is gRPC.
      # See Exposed ext_authz API for a detailed list of the ext_authz fields exposed here.
      envoyExtAuthzHttp:
        service: "oauth2-proxy.oauth2-proxy.svc.cluster.local"
        port: "80"
        # Send the check request to ext-authz server at the path /check
        #pathPrefix: "/check"
        # Includes the header "x-foo" in the check request to the external server.
        includeHeadersInCheck:
        - "cookie"
        # https://discuss.istio.io/t/ext-auth-with-istio-1-9-1-and-oauth-proxy-redirect-issue-once-authenticated/9906/4
        includeAdditionalHeadersInCheck:
          X-Auth-Request-Redirect: 'http://%REQ(Host)%'
        # Forwards the Authorization header from the external server to upstream (backend).
        headersToUpstreamOnAllow: ["authorization"]
        # Forwards the Set-cookie header from the external server to downstream (user).
        headersToDownstreamOnDeny: ["content-type", "set-cookie"] 
kiali-operator:
  cr:
    create: true
    namespace: "istio-system"
    spec:
      external_services:
        prometheus:
          url: http://kps-prometheus.kps.svc.cluster.local:9090
        grafana:
          in_cluster_url: http://grafana.kps.svc.cluster.local:80
          url: http://grafana.in.lab
