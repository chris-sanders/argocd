apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
 name: allow-nothing
 namespace: bitwarden
spec:
  {}
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: bitwarden-ingress
  namespace: bitwarden
spec:
  action: ALLOW
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
 name: allow-nothing
 namespace: gollum
spec:
  {}
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: gollum-ingress
  namespace: gollum
spec:
  action: ALLOW
  selector:
    matchLabels:
      app.kubernetes.io/name: gollum
  rules:
  #- from:
  #  - source:
  #      principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
  - when:
      - key: request.auth.claims[email]
        values:
          - admin@example.com
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: gollum-ext-auth
  namespace: istio-system
spec:
  selector:
    matchLabels:
      #app.kubernetes.io/name: gollum
      istio: ingressgateway
  action: CUSTOM
  provider:
    name: "oauth-ext-authz"
  rules:
  - to:
    - operation:
        hosts: ["gollum.in.lab"]
        #paths: ["*"]
# ---
# apiVersion: security.istio.io/v1beta1
# kind: AuthorizationPolicy
# metadata:
#   name: gollum-authorization
#   namespace: istio-system
# spec:
#   selector:
#     matchLabels:
#       app.kubernetes.io/name: gollum
#   action: ALLOW
#   rules:
#     - to:
#       - operation:
#           paths: ["*"]
#       when:
#         - key: request.auth.claims[email]
#           values:
#             - admin@example.com
