{{- $keycloakVersion := regexFind "^[0-9]+" .Values.keycloak.operator.image.tag }}
{{- range $realmName, $realmConfig := .Values.keycloak.realms }}
---
apiVersion: keycloak.infra.doodle.com/v1beta1
kind: KeycloakRealm
metadata:
  name: {{ $realmName | lower }}
  namespace: {{ $.Release.Namespace }}
spec:
  version: {{ $keycloakVersion | quote }}
  address: http://keycloak-service.{{ $.Release.Namespace }}.svc:8080/
  authSecret:
    name: keycloak-initial-admin
  interval: 1h
  timeout: 5m0s
  resourceSelector:
    matchLabels: {}
  realm:
    enabled: true
    displayName: {{ $realmName | title }}
    duplicateEmailsAllowed: false
    editUsernameAllowed: false
    {{- if $realmConfig.groups }}
    groups:
      {{- $realmConfig.groups | toYaml | nindent 6 }}
    {{- end }}
    {{- if or $realmConfig.realmRoles $realmConfig.clientRoles }}
    roles:
      {{- if $realmConfig.clientRoles }}
      client:
        {{- range $client, $roles := $realmConfig.clientRoles }}
        {{ $client }}:
          {{- range $role := $roles }}
          - name: {{ $role.name }}
            description: {{ $role.description }}
            clientRole: true
          {{- end }}
        {{- end }}
      {{- end }}
      {{- if $realmConfig.realmRoles }}
      realm:
        {{- range $role := $realmConfig.realmRoles }}
        - name: {{ $role.name }}
          description: {{ $role.description | quote }}
        {{- end }}
      {{- end }}
    {{- end }}
    clientScopes:
      - name: groups
        description: "Users keycloak groups"
        protocol: openid-connect
        attributes:
          include.in.token.scope: "true"
          display.on.consent.screen: "false"
        protocolMappers:
          - name: groups
            protocol: openid-connect
            protocolMapper: oidc-group-membership-mapper
            config:
              full.path: "false"
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              multivalued: "true"
              id.token.claim: "true"
              lightweight.claim: "false"
              access.token.claim: "true"
              claim.name: "groups"
    defaultDefaultClientScopes:
      - acr
      - basic
      - email
      - groups
      - profile
      - roles
      - role_list
      #- saml_organization
      - web-origins
    defaultOptionalClientScopes:
      - offline_access
      - address
      - phone
      - microprofile-jwt
      #- organization
{{- end }}
